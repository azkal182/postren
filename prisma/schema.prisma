// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id       String   @id @default(uuid())
    name     String
    username String   @unique
    password String
    role     RoleUser @default(USER)
    type     TypeUser @default(LK)
}

enum RoleUser {
    ADMIN
    USER
}

enum TypeUser {
    ALL
    LK
    PR
}

model Student {
    id      String   @id
    name    String
    address String
    sex     SexType
    master  Master[]
}

enum SexType {
    LK
    PR
    ALL
}

model Master {
    id          String    @id @default(uuid())
    createdAt   DateTime  @default(now())
    returnAt    DateTime?
    studentId   String
    students    Student   @relation(references: [id], fields: [studentId])
    kelasId     String?
    kelas       Kelas?    @relation(references: [name, sex], fields: [kelasId, sex])
    asramaId    String
    asrama      Asrama    @relation(references: [name, sex], fields: [asramaId, sex])
    keluhans    Keluhan[]
    description String?
    room        String?
    returnTo    ReturnTo?
    sex         SexType
}

model Keluhan {
    name   String   @id
    master Master[]
}

enum ReturnTo {
    RUMAH
    RS
    ASRAMA
}

model Kelas {
    name   String
    sex    SexType  @default(LK)
    master Master[]

    @@id([name, sex])
}

model Asrama {
    name   String
    sex    SexType  @default(LK)
    master Master[]

    @@id([name, sex])
}
